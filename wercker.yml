# This references the default Python container from
# the Docker Hub with the 2.7 tag:
# https://registry.hub.docker.com/_/python/
# If you want to use a slim Python container with
# version 3.4.3 you would use: python:3.4-slim
# If you want Google's container you would reference google/python
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: python:3.6
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
  - id: mysql
    env:
      MYSQL_ROOT_PASSWORD: password

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `pip install` command.
    - pip-install

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo python information
        code: |
          echo "python version $(python --version) running"
          echo "pip version $(pip --version) running"
    - script:
        name: install mysql-client unzip
        code: |
          sudo apt-get update
          sudo apt-get -y install mysql-client unzip
    - script:
        name: mysql information
        code: |
          mysql --version
    - script:
        name: install pyenv
        code: |
          cd /usr/local/
          sudo git clone git://github.com/yyuu/pyenv.git ./pyenv
          sudo mkdir -p ./pyenv/versions ./pyenv/shims
          echo 'export PYENV_ROOT="/usr/local/pyenv"' | sudo tee -a /etc/profile.d/pyenv.sh
          echo 'export PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"' | sudo tee -a /etc/profile.d/pyenv.sh
          source /etc/profile.d/pyenv.sh # 設定反映
    - script:
        name: pyenv information
        code: |
          pyenv --version
          pyenv versions
    - script:
        name: install python 2.7.6
        code: |
          sudo pyenv install -v 2.7.6
          sudo pyenv global 2.7.6
          pyenv versions
    - script:
        name: install google-cloud-sdk
        code: |
          export CLOUDSDK_PYTHON_SITEPACKAGES=1
          wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip && unzip google-cloud-sdk.zip && rm google-cloud-sdk.zip
          google-cloud-sdk/install.sh --quiet
          source /root/.bashrc
    - script:
        name: authentification
        code: |
          export GOOGLE_APPLICATION_CREDENTIALS=/pipeline/source/tp-paperwork-development-2146f321f716.json
          gcloud config set project tp-paperwork-development
          openssl aes-256-cbc -k ${DECRYPT_KEY} -d -in tp-paperwork-development-2146f321f716.json.encrypted -out tp-paperwork-development-2146f321f716.json
          gcloud auth activate-service-account --key-file tp-paperwork-development-2146f321f716.json
    - script:
        name: python version change system
        code: |
          sudo pyenv global system
    - script:
        name: db create
        code: |
          echo "db creating..."
          mysql -h$MYSQL_PORT_3306_TCP_ADDR -P$MYSQL_PORT_3306_TCP_PORT -uroot -Dmysql -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD < data/sql/00-database.sql
          echo "db created"
    - script:
        name: execute test
        code: |
          nosetests --cover-tests --with-coverage --cover-erase --cover-package=application --cover-branches -v
deploy-development:
  box: google/cloud-sdk
  steps:
    - script:
        name: authentification
        code: |
          gcloud config set project tp-paperwork-development
          openssl aes-256-cbc -k ${DECRYPT_KEY} -d -in tp-paperwork-development-2146f321f716.json.encrypted -out tp-paperwork-development-2146f321f716.json
          gcloud auth activate-service-account --key-file tp-paperwork-development-2146f321f716.json
    - script:
        name: deploy GAE
        code: |
          gcloud --quiet app deploy app-development.yaml --project tp-paperwork-development
  after-steps:
    - script:
        name: install curl
        code: |
          sudo apt-get update
          sudo apt-get -y install curl
    - slack-notifier:
        url: $SLACK_URL
        channel: tp-paperwork
        username: wercker
deploy-production:
  box: google/cloud-sdk
  steps:
    - script:
        name: authentification
        code: |
          gcloud config set project tp-paperwork-development
          openssl aes-256-cbc -k ${DECRYPT_KEY} -d -in tp-paperwork-221d27c465d1.json.encrypted -out tp-paperwork-221d27c465d1.json
          gcloud auth activate-service-account --key-file tp-paperwork-221d27c465d1.json
    - script:
        name: deploy GAE
        code: |
          gcloud --quiet app deploy app-production.yaml --project tp-paperwork
  after-steps:
    - script:
        name: install curl
        code: |
          sudo apt-get update
          sudo apt-get -y install curl
    - slack-notifier:
        url: $SLACK_URL
        channel: tp-paperwork
        username: wercker
